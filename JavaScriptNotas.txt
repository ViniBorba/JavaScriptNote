JavaScript Notas

- Console do JavaScript abre em qualquer navegador com o inspensionar elemento.

console.log é usado para exibir conteúdo para o console do JavaScript

console.log((10 * 4) + 10 - 8); igual a 42

- var 
	Quando cria uma variável, você escreve o nome da variável utilizando camelCase (a primeira palavra em minúsculo e as palavras seguintes, em maiúsculo).

var celsius = 12;
var fahrenheit = celsius * 1.8 + 32;/* convert celsius to fahrenheit here */

console.log(fahrenheit/* print out result here */);

Código		Caractere
\			\ (barra invertida)
\"			'' (aspas duplas)
\'			' (aspas simples)
\n			nova linha
\t			tab

 - null refere-se ao "valor de nada", enquanto undefined refere-se à "ausência de valor".

  NaN significa "Not-A-Number" e é constantemente retornado indicando um erro com operações numéricas. Por exemplo, se você escreveu um código que fez um cálculo matemático e o cálculo falhou ao produzir um número válido, NaN provavelmente será retornado.

  - Igualdade estrita
		Em vez disso, em JavaScript, é melhor utilizar igualdade estrita para ver se números, strings ou booleanos, etc. são idênticos em tipo e valor, sem realizar a conversão de tipos primeiramente. Para fazer uma comparação estrita, simplesmente adicione mais um símbolo de igual = ao final dos operadores == e !=
		1 === 1 que vai dar diferente se fizer "1" === 1
		1 !== "1" vai dar true, posi eles são diferentes, um é string e outro é numero

Código em JavaScript
var bill = 10.25 + 3.99 + 7.15;
var tip = bill * 0.15;
var total = bill + tip;
console.log("$"+total.toFixed(2));

 - if e else if
 	var weather = "sunny";

if (weather === "snow") {
  console.log("Traga um casaco.");
} else if (weather === "rain") {
  console.log("Traga uma jaqueta de chuva.");
} else {
  console.log("Vista o que você já está vestindo.");
}
	Imprime: Vista o que você já está vestindo.


 - If em cadeia
 var musicians = 1;

// your code goes here
if (musicians <= 0){
    console.log("not a group");
    } else if (musicians === 1){
        console.log("solo");
        } else if (musicians === 2){
            console.log("duet");
            } else if (musicians === 3){
                console.log("trio");
                } else if (musicians === 4){
                    console.log("quartet");
                    } else {
                        console.log("this is a large group");
                    }


- Operadores lógicos
	Operador	Significado		Exemplo				Como funciona
	&&			Lógico E		valor1 && valor2	Retorna verdadeiro se ambos o valor1 e o valor2 forem avaliados como verdadeiro.
	||			Lógico OU		valor1 || valor2	Retorna verdadeiro se valor1 ou valor2 (ou mesmo ambos!) forem avaliados como verdadeiro.
	!			Lógico NÃO		!valor1				Retorna o oposto do valor1. Se valor1 é verdadeiro, então !valor1 é falso.

 - IF com negação e operador logico

 var balance = 350.00;
var checkBalance = true;
var isActive = false;

// your code goes here
if(checkBalance){
    if(isActive && balance > 0){
        console.log("Your balance is $ "+ balance.toFixed(2));
    } else if(!isActive){
        console.log("Your account is no longer active.");
    } else if(balance === 0){
        console.log("Your account is empty.");
    } else{
        console.log("Your balance is negative. Please contact bank.");
    }
} else{
    console.log("Thank you. Have a nice day!");
}


 - Operador ternário:

 condicional ? (se condicional é verdadeiro) : (se condicional é falso)

 Para usar o operador ternário, primeiro forneça uma declaração condicional do lado esquerdo de ?. Então, entre o ? e :, escreva o código que seria executado 
 se a condição fosse verdadeira e, ao lado direito de :, escreva o código que seria executado se a condição fosse falsa.

  - Declaração switch

  var option = 3;

switch (option) {
  case 1:
    console.log("Você selecionou a opção 1.");
    break;
  case 2:
    console.log("Você selecionou a opção 2.");
    break;
  case 3:
    console.log("Você selecionou a opção 3.");
    break;
  case 4:
    console.log("Você selecionou a opção 4.");
    break;
  case 5:
    console.log("Você selecionou a opção 5.");
    break;
  case 6:
    console.log("Você selecionou a opção 6.");
    break; // tecnicamente, não necessário
}
  Importante lembrar que sem o break, tudo que vem a baixo do switch também vai ser colocado no programa.
  depois do ultimo break Você pode adicionar uma cláusula default para uma declaração switch, e ela será executada 
  	quando nenhum dos valores combinar com o valor da expressão switch.

  - Whhile 

  var start = 0; // quando começar
while (start < 10) { // quando parar
  console.log(start);
  start = start + 2; // como ir para o próximo item
}

 - For

 for (var k = 0; k < 200; k++) {
    console.log(k);
}

 for ( start; stop; step ) {
  // faça isto
}

 - Incremento e decremento
x++ or ++x // same as x = x + 1 
x-- or --x // same as x = x - 1
x += 3 // same as x = x + 3
x -= 6 // same as x = x - 6
x *= 2 // same as x = x * 2
x /= 5 // same as x = x / 5

 - A porra começa a ficar séria.
 FUNÇÃO EM JavaScript, um trecho de código que por argumentos (PARAMETRO) transforma uma entrada em uma saída que escrevi nesse trecho
 Parâmetros x argumentos : PARAMENTRO É NA MINHA FUNÇÃO, ARGUMENTO É QUANDO USO A FUNÇÃO. QUE VAI ENTRE ()
 *Funções empacotam o código para que você possa facilmente utilizar (e reutilizar) um bloco de código. 
 *Parâmetros são variáveis utilizadas para armazenar dados que são passados para a função utilizar. 
 *Argumentos são os dados propriamente ditos, passados para a função quando ela é invocada

 // x e y são parâmetros nesta declaração de função
function add(x, y) {
  // corpo da função
  var sum = x + y;
  return sum; // comando return
}

// 1 e 2 são passados para a função como argumentos
var sum = add(1, 2);

